name: Build

#on: [ push, pull_request, workflow_dispatch ]

on:
  workflow_dispatch:
    inputs:
      images:
        description: 'Images to push'
        required: false
        type: string
      environment:
        description: dev or prod
        required: true
        type: string
  workflow_call:
    inputs:
      images:
        description: 'Images to push'
        required: false
        type: string
  #push:
  #  branches:
  #    - 'main'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: "Node Cache"
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-cache-node-${{ hashFiles('**/package.json') }}

      - name: "Node Modules Cache"
        uses: actions/cache@v3
        with:
          path: $GITHUB_WORKSPACE/repo/node_modules
          key: ${{ runner.os }}-cache-node_modules-${{ hashFiles('**/package.json') }}

      - name: "Setup Node"
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: "Setup Java"
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'adopt'
          cache: 'maven'

      - name: Get project version from POM
        id: project_version
        run: echo "VERSION=`mvn help:evaluate -Dexpression=project.version -q -DforceStdout`" >> $GITHUB_OUTPUT
  
      - name: Maven Publish
        # if: ${{ endsWith(steps.project_version.outputs.version, '-SNAPSHOT') }}
        run: mvn -B -ntp clean deploy
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

      - name: Docker Build
        run: docker image build -t ${{ inputs.images }} .
  
      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
  
      - name: Push Docker images to GHCR
        run: |
          for name in ${{ inputs.images }}
          do
            docker push $name:${{ steps.project_version.outputs.version }}
          done